import{s as c,g as l}from"./index-DrpMAtVn.js";class y{static async assignOrderToStore(e){const{orderId:r,storeId:i,assignedBy:t="system",mode:n="manual"}=e;try{console.log("🔄 Starting order assignment:",{orderId:r,storeId:i,mode:n});const{data:s,error:a}=await c.from("orders").select("id, order_code, order_status, main_store_name, assigned_store_id").eq("id",r).single();if(a||!s)throw new Error(`الطلب غير موجود: ${a?.message||"Order not found"}`);const{data:o,error:g}=await c.from("stores").select("id, name, status").eq("id",i).single();if(g||!o)throw new Error(`المتجر غير موجود: ${g?.message||"Store not found"}`);if(o.status!=="active")throw new Error(`المتجر غير نشط: ${o.name}`);if(s.order_status==="delivered"||s.order_status==="returned")throw new Error(`لا يمكن تحويل طلب بحالة: ${s.order_status}`);const{error:d}=await c.from("orders").update({assigned_store_id:i,assigned_store_name:o.name,order_status:"assigned",updated_at:new Date().toISOString(),assignment_metadata:{assigned_by:t,assignment_mode:n,assigned_at:new Date().toISOString(),previous_status:s.order_status}}).eq("id",r);if(d)throw new Error(`فشل تحديث الطلب: ${d.message}`);return console.log("✅ Order assigned successfully:",{orderId:r,storeName:o.name,previousStatus:s.order_status}),{success:!0,message:`تم تحويل الطلب ${s.order_code} إلى متجر "${o.name}" بنجاح`,order_status:"assigned",store_name:o.name,assigned_at:new Date().toISOString()}}catch(s){const a=l(s,"خطأ في تعيين الطلب للمتجر");return console.error("❌ Error in assignOrderToStore:",{error:a,orderId:r,storeId:i}),{success:!1,error:a}}}static async autoAssignOrders(e={}){const{orderId:r,returnReason:i,mode:t="all"}=e;try{console.log("🤖 Starting auto-assignment:",{orderId:r,mode:t,returnReason:i});const{data:n,error:s}=await c.from("stores").select("id, name, status").eq("status","active");if(s)throw new Error(`فشل جلب المتاجر: ${s.message}`);if(!n||n.length===0)throw new Error("لا توجد متاجر نشطة");let a=c.from("orders").select("id, order_code, main_store_name, order_status, assigned_store_id");t==="single"&&r?a=a.eq("id",r):a=a.or("order_status.eq.pending,order_status.eq.processing");const{data:o,error:g}=await a;if(g)throw new Error(`فشل جلب الطلبات: ${g.message}`);if(!o||o.length===0)return{success:!0,message:"لا توجد طلبات للمعالجة",assigned_count:0,unmatched_count:0,error_count:0,results:[]};const d=[];let f=0,h=0,_=0;for(const u of o)try{const m=n.find(p=>p.name.toLowerCase().trim()===u.main_store_name?.toLowerCase().trim());if(!m){h++,d.push({order_id:u.id,status:"unmatched",error_message:`لا يوجد متجر مطابق لـ "${u.main_store_name}"`});continue}const w=await this.assignOrderToStore({orderId:u.id,storeId:m.id,assignedBy:"auto-system",mode:"auto"});w.success?(f++,d.push({order_id:u.id,status:"assigned",store_name:m.name})):(_++,d.push({order_id:u.id,status:"error",error_message:w.error||"خطأ غير معروف"}))}catch(m){_++,d.push({order_id:u.id,status:"error",error_message:l(m,"خطأ في تعيين الطلب")})}return console.log("✅ Auto-assignment completed:",{total:o.length,assigned:f,unmatched:h,errors:_}),{success:!0,message:`تم معالجة ${o.length} طلب: ${f} محول، ${h} غير مطابق، ${_} خطأ`,assigned_count:f,unmatched_count:h,error_count:_,results:d}}catch(n){const s=l(n,"خطأ في التعيين التلقائي للطلبات");return console.error("❌ Error in autoAssignOrders:",{error:s,request:e}),{success:!1,error:s,assigned_count:0,unmatched_count:0,error_count:1}}}static async unassignOrder(e){try{const{error:r}=await c.from("orders").update({assigned_store_id:null,assigned_store_name:null,order_status:"pending",updated_at:new Date().toISOString()}).eq("id",e);if(r)throw new Error(`فشل إلغاء التحويل: ${r.message}`);return{success:!0,message:"تم إلغاء تحويل الطلب بنجاح",order_status:"pending"}}catch(r){return{success:!1,error:l(r,"خطأ في التعيين التلقائي")}}}static async getAssignmentStats(){try{const{data:e,error:r}=await c.from("orders").select("order_status, assigned_store_id, main_store_name");if(r)throw r;return{success:!0,stats:{total:e.length,assigned:e.filter(t=>t.assigned_store_id).length,pending:e.filter(t=>t.order_status==="pending").length,processing:e.filter(t=>t.order_status==="processing").length,delivered:e.filter(t=>t.order_status==="delivered").length,returned:e.filter(t=>t.order_status==="returned").length}}}catch(e){return{success:!1,error:l(e,"خطأ في التعيين التلقائي")}}}}export{y as OrderAssignmentService,y as default};
